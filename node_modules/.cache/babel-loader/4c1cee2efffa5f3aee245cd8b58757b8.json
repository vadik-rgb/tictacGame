{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vadick/projects/tictac/tictactoy/src/index.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './game';\nimport { render } from '@testing-library/react';\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[this.state.stepNumber];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext\n//     });\n//   }\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n//   render() {\n//     const history = this.state.history;\n//     const current = history[history.length - 1];\n//     const winner = calculateWinner(current.squares);\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//         <Board\n//           squares={current.squares}\n//           onClick={(i) => this.handleClick(i)}\n//         />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 139,\n  columnNumber: 3\n}, this), document.getElementById('root')); // function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }","map":{"version":3,"sources":["/home/vadick/projects/tictac/tictactoy/src/index.js"],"names":["React","Component","ReactDOM","Game","render","App","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AACzBG,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AANweACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './game';\nimport { render } from '@testing-library/react';\n\n\nclass App extends Component{\n  render () {\n    return (\n      <Game />\n    )\n  \n  }\n\n}\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square \n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null),\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n\n//   handleClick(i) {\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[this.state.stepNumber];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares,\n//       }]),\n//       stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext\n//     });\n//   }\n\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n\n//   render() {\n//     const history = this.state.history;\n//     const current = history[history.length - 1];\n//     const winner = calculateWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n    \n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//         <Board\n//           squares={current.squares}\n//           onClick={(i) => this.handleClick(i)}\n//         />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }"]},"metadata":{},"sourceType":"module"}